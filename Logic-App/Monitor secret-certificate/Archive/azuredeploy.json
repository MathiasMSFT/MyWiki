{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "LogicAppName": {
            "defaultValue": "EntraID-App-Notification",
            "type": "String",
            "metadata": {
                "description": "Name of your Logic App"
            }
        },
        "LogicAppNotifications": {
            "defaultValue": "/subscriptions/<subid>/resourceGroups/<rg name>/providers/Microsoft.Logic/workflows/<logicapp name>",
            "type": "String",
            "metadata": {
                "description": "Path of the Logic App you created previously for notifications (/subscriptions/<subscription id>/resourceGroups/<resource group name>/providers/Microsoft.Logic/workflows/<logicapp notification name)"
            }
        },
        "Frequency": {
            "defaultValue": "Month",
            "type": "String",
            "metadata": {
                "description": "Define the frequency: Month, Week, Day, Hour, Minute, Second"
            }
        },
        "Interval": {
            "defaultValue": "1",
            "type": "String",
            "metadata": {
                "description": "Define how many times you want to run this Logic App in your frequency"
            }
        },
        "MailFrom": {
            "defaultValue": "igateamnotification@contoso.com",
            "type": "String",
            "metadata": {
                "description": "Email used to send reports"
            }
        },
        "MailReport": {
            "defaultValue": "mathias.dumont@contoso.com",
            "type": "String",
            "metadata": {
                "description": "Email which receive a global report (admin, IGA team, ...)"
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "type": "Microsoft.Logic/workflows",
            "apiVersion": "2017-07-01",
            "name": "[parameters('LogicAppName')]",
            "location": "eastus2",
            "tags": {},
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "state": "Enabled",
                "definition": {
                    "$schema": "https://schema.management.azure.com/providers/Microsoft.Logic/schemas/2016-06-01/workflowdefinition.json#",
                    "contentVersion": "1.0.0.0",
                    "parameters": {
                        "$connections": {
                            "defaultValue": {},
                            "type": "Object"
                        }
                    },
                    "triggers": {
                        "Recurrence": {
                            "recurrence": {
                                "frequency": "[parameters('Frequency')]",
                                "interval": "[parameters('Interval')]"
                            },
                            "evaluatedRecurrence": {
                                "frequency": "[parameters('Frequency')]",
                                "interval": "[parameters('Interval')]"
                            },
                            "type": "Recurrence"
                        }
                    },
                    "actions": {
                        "Close_HTML_tags": {
                            "runAfter": {
                                "Until": [
                                    "Succeeded"
                                ]
                            },
                            "type": "AppendToStringVariable",
                            "inputs": {
                                "name": "html",
                                "value": "<tbody></table>"
                            }
                        },
                        "IGA-Notifications_-_Global": {
                            "runAfter": {
                                "Close_HTML_tags": [
                                    "Succeeded"
                                ]
                            },
                            "type": "Workflow",
                            "inputs": {
                                "host": {
                                    "workflow": {
                                        "id": "[parameters('LogicAppNotifications')]"
                                    },
                                    "triggerName": "When_a_HTTP_request_is_received"
                                },
                                "body": {
                                    "MailFrom": "[parameters('MailFrom')]",
                                    "SendTo": "[parameters('MailReport')]",
                                    "Subject": "List of Secrets and Certificates that have expired",
                                    "Body": "@variables('html')",
                                    "saveToSentItems": false
                                }
                            },
                            "operationOptions": "DisableAsyncPattern"
                        },
                        "Initialize_-_NextLink": {
                            "runAfter": {
                                "Initialize_CSA-Owner-Check": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "NextLink",
                                        "type": "string",
                                        "value": "https://graph.microsoft.com/v1.0/applications?$select=id,appId,displayName,passwordCredentials,keyCredentials&$top=999"
                                    }
                                ]
                            }
                        },
                        "Initialize_-_keyCredential": {
                            "runAfter": {
                                "Initialize_passwordCredential": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "keyCredential",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_CSA-Owner": {
                            "runAfter": {
                                "Initialize_daysTilExpiration": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CSA-Owner",
                                        "type": "string"
                                    }
                                ]
                            }
                        },
                        "Initialize_appid": {
                            "runAfter": {},
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "AppID",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Initialize_daysTilExpiration": {
                            "runAfter": {
                                "Initialize_html": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "daysTilExpiration",
                                        "type": "float",
                                        "value": 10
                                    }
                                ]
                            }
                        },
                        "Initialize_displayName": {
                            "runAfter": {
                                "Initialize_appid": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "displayName",
                                        "type": "string",
                                        "value": ""
                                    }
                                ]
                            }
                        },
                        "Initialize_html": {
                            "runAfter": {
                                "Initialize_styles": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "html",
                                        "type": "string",
                                        "value": "<table  @{variables('styles').tableStyle}><thead><th  @{variables('styles').headerStyle}>Application ID</th><th  @{variables('styles').headerStyle}>Display Name</th><th @{variables('styles').headerStyle}> Key Id</th><th  @{variables('styles').headerStyle}>Days since Expiration</th><th  @{variables('styles').headerStyle}>Type</th><th  @{variables('styles').headerStyle}>Expiration Date</th><th @{variables('styles').headerStyle}>Owner</th></thead><tbody>"
                                    }
                                ]
                            }
                        },
                        "Initialize_passwordCredential": {
                            "runAfter": {
                                "Initialize_displayName": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "passwordCredential",
                                        "type": "array"
                                    }
                                ]
                            }
                        },
                        "Initialize_styles": {
                            "runAfter": {
                                "Initialize_-_keyCredential": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "styles",
                                        "type": "object",
                                        "value": {
                                            "cellStyle": "style=\"font-family: Calibri; padding: 5px; border: 1px solid black;\"",
                                            "headerStyle": "style=\"font-family: Helvetica; padding: 5px; border: 1px solid black;\"",
                                            "redStyle": "style=\"background-color:red; font-family: Calibri; padding: 5px; border: 1px solid black;\"",
                                            "tableStyle": "style=\"border-collapse: collapse;\"",
                                            "yellowStyle": "style=\"background-color:yellow; font-family: Calibri; padding: 5px; border: 1px solid black;\""
                                        }
                                    }
                                ]
                            }
                        },
                        "Until": {
                            "actions": {
                                "Foreach_-_apps": {
                                    "foreach": "@body('Parse_JSON_-_Get_Apps')?['value']",
                                    "actions": {
                                        "Condition_-_If_CSA_is_null": {
                                            "actions": {
                                                "Set_variable_-_CSA-Owner-Check-null": {
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "CSA-Owner Check",
                                                        "value": false
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "Parse_light_-_Owner": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "else": {
                                                "actions": {
                                                    "Parse_-_CSA-Owner": {
                                                        "type": "ParseJson",
                                                        "inputs": {
                                                            "content": "@body('HTTP_-_Get_CSA-Owner')",
                                                            "schema": {
                                                                "properties": {
                                                                    "@@odata.context": {
                                                                        "type": "string"
                                                                    },
                                                                    "customSecurityAttributes": {
                                                                        "properties": {
                                                                            "OwnerManagement": {
                                                                                "properties": {
                                                                                    "@@odata.type": {
                                                                                        "type": "string"
                                                                                    },
                                                                                    "AppOwner": {
                                                                                        "items": {
                                                                                            "type": "string"
                                                                                        },
                                                                                        "type": "array"
                                                                                    },
                                                                                    "AppOwner@odata.type": {
                                                                                        "type": "string"
                                                                                    }
                                                                                },
                                                                                "type": "object"
                                                                            }
                                                                        },
                                                                        "type": "object"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            }
                                                        }
                                                    },
                                                    "Condition": {
                                                        "actions": {
                                                            "Set_variable_-_CSA-Owner-Check-true": {
                                                                "type": "SetVariable",
                                                                "inputs": {
                                                                    "name": "CSA-Owner Check",
                                                                    "value": true
                                                                }
                                                            }
                                                        },
                                                        "runAfter": {
                                                            "Parse_-_CSA-Owner": [
                                                                "Succeeded"
                                                            ]
                                                        },
                                                        "else": {
                                                            "actions": {
                                                                "Set_variable_-_CSA-Owner-Check-false": {
                                                                    "type": "SetVariable",
                                                                    "inputs": {
                                                                        "name": "CSA-Owner Check",
                                                                        "value": false
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "expression": {
                                                            "and": [
                                                                {
                                                                    "equals": [
                                                                        "@contains(body('Parse_-_CSA-Owner')?['customSecurityAttributes'], 'OwnerManagement')",
                                                                        "@true"
                                                                    ]
                                                                }
                                                            ]
                                                        },
                                                        "type": "If"
                                                    }
                                                }
                                            },
                                            "expression": {
                                                "and": [
                                                    {
                                                        "equals": [
                                                            "@empty(body('Parse_light_-_Owner')?['customSecurityAttributes'])",
                                                            "@true"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "type": "If"
                                        },
                                        "For_each_-_PasswordCred": {
                                            "foreach": "@items('Foreach_-_apps')?['passwordCredentials']",
                                            "actions": {
                                                "Condition_-_if_already_expired_passCred": {
                                                    "actions": {
                                                        "Condition_-_If_owner": {
                                                            "actions": {
                                                                "Append_Secret_to_HTML_with_owner": {
                                                                    "type": "AppendToStringVariable",
                                                                    "inputs": {
                                                                        "name": "html",
                                                                        "value": "<tr><td @{variables('styles').cellStyle}><a href=\"https://ms.portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{variables('appId')}/isMSAApp/\">@{variables('appId')}</a></td><td @{variables('styles').cellStyle}>@{variables('displayName')}</td><td @{variables('styles').cellStyle}>@{items('For_each_-_PasswordCred')?['keyId']}</td><td @{if(less(variables('daystilexpiration'),100),variables('styles').redStyle,if(less(variables('daystilexpiration'),150),variables('styles').yellowStyle,variables('styles').cellStyle))}>@{variables('daystilexpiration')} </td><td @{variables('styles').cellStyle}>Secret</td><td @{variables('styles').cellStyle}>@{formatDateTime(item()?['endDateTime'],'g')}</td><td @{variables('styles').cellStyle}>@{join(body('Parse_-_CSA-Owner')?['customSecurityAttributes']?['OwnerManagement']?['AppOwner'],',')}</td></tr>"
                                                                    }
                                                                },
                                                                "For_each_-_Owner": {
                                                                    "foreach": "@body('Parse_-_CSA-Owner')?['customSecurityAttributes']?['OwnerManagement']?['AppOwner']",
                                                                    "actions": {
                                                                        "IGA-Notifications_-_passCred": {
                                                                            "runAfter": {
                                                                                "Prepare_HTML_for_secret_-_owner": [
                                                                                    "Succeeded"
                                                                                ]
                                                                            },
                                                                            "type": "Workflow",
                                                                            "inputs": {
                                                                                "host": {
                                                                                    "workflow": {
                                                                                        "id": "[parameters('LogicAppNotifications')]"
                                                                                    },
                                                                                    "triggerName": "When_a_HTTP_request_is_received"
                                                                                },
                                                                                "body": {
                                                                                    "MailFrom": "[parameters('MailFrom')]",
                                                                                    "SendTo": "@{items('For_each_-_Owner')}",
                                                                                    "Subject": "Your secret is expired",
                                                                                    "Body": "@outputs('Prepare_HTML_for_secret_-_owner')"
                                                                                }
                                                                            },
                                                                            "operationOptions": "DisableAsyncPattern"
                                                                        },
                                                                        "Prepare_HTML_for_secret_-_owner": {
                                                                            "type": "Compose",
                                                                            "inputs": "Hello,<br/>\nYou are owner of the application <strong>@{items('Foreach_-_apps')?['displayName']}</strong>.<br/>\n\nOne of the secrets of this application is expired since @{variables('daysTilExpiration')} days.<br/>\n\nPlease take action to resolve any authentication issues related to the expiration of the secret.<br/><br/>\n\nHere are the details of the secret :<br/>\n<strong>Secret Id :</strong> @{items('For_each_-_PasswordCred')?['keyId']}<br/>\n<strong>Expiration time :</strong> @{formatDateTime(items('For_each_-_PasswordCred')?['endDateTime'],'g')}<br/>\n<strong>App Id :</strong> <a href=\"https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{items('Foreach_-_apps')?['appId']}/isMSAApp/\" >@{items('Foreach_-_apps')?['appId']}</a><br/><br/>\n\n\nThank you"
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Append_Secret_to_HTML_with_owner": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "type": "Foreach"
                                                                }
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Append_Secret_to_HTML_without_owner": {
                                                                        "type": "AppendToStringVariable",
                                                                        "inputs": {
                                                                            "name": "html",
                                                                            "value": "<tr><td @{variables('styles').cellStyle}><a href=\"https://ms.portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{variables('appId')}/isMSAApp/\">@{variables('appId')}</a></td><td @{variables('styles').cellStyle}>@{variables('displayName')}</td><td @{variables('styles').cellStyle}>@{items('For_each_-_PasswordCred')?['keyId']}</td><td @{if(less(variables('daystilexpiration'),100),variables('styles').redStyle,if(less(variables('daystilexpiration'),150),variables('styles').yellowStyle,variables('styles').cellStyle))}>@{variables('daystilexpiration')} </td><td @{variables('styles').cellStyle}>Secret</td><td @{variables('styles').cellStyle}>@{formatDateTime(item()?['endDateTime'],'g')}</td><td @{variables('styles').cellStyle}></td></tr>"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('CSA-Owner Check')",
                                                                            "@true"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Set_variable_-_daysTilsExpiration": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Condition_-_less_than_30_days_-_passCred": {
                                                                "actions": {
                                                                    "For_each_-_Owner_-_30d": {
                                                                        "foreach": "@body('Parse_-_CSA-Owner')?['customSecurityAttributes']?['OwnerManagement']?['AppOwner']",
                                                                        "actions": {
                                                                            "IGA-Notifications_-_passCred_-_30d": {
                                                                                "runAfter": {
                                                                                    "Prepare_HTML_for_secret_-_owner_-_30d": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "Workflow",
                                                                                "inputs": {
                                                                                    "host": {
                                                                                        "workflow": {
                                                                                            "id": "[parameters('LogicAppNotifications')]"
                                                                                        },
                                                                                        "triggerName": "When_a_HTTP_request_is_received"
                                                                                    },
                                                                                    "body": {
                                                                                        "MailFrom": "[parameters('MailFrom')]",
                                                                                        "SendTo": "@items('For_each_-_Owner_-_30d')",
                                                                                        "Subject": "Your secret is going to expire",
                                                                                        "Body": "@outputs('Prepare_HTML_for_secret_-_owner_-_30d')"
                                                                                    }
                                                                                },
                                                                                "operationOptions": "DisableAsyncPattern"
                                                                            },
                                                                            "Prepare_HTML_for_secret_-_owner_-_30d": {
                                                                                "type": "Compose",
                                                                                "inputs": "Hello,<br/>\nYou are owner of the application <strong>@{items('Foreach_-_apps')?['displayName']}</strong>.<br/>\n\nOne of the secrets of this application is going to expire in @{variables('daysTilExpiration')} days.<br/>\n\nPlease take action to avoid any authentication issues related to the expiration of the secret.<br/><br/>\n\nHere are the details of the secret :<br/>\n<strong>Secret Id :</strong> @{items('For_each_-_PasswordCred')?['keyId']}<br/>\n<strong>Expiration time :</strong> @{formatDateTime(items('For_each_-_PasswordCred')?['endDateTime'],'g')}<br/>\n<strong>App Id :</strong> <a href=\"https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{items('Foreach_-_apps')?['appId']}/isMSAApp/\" >@{items('Foreach_-_apps')?['appId']}</a><br/><br/>\n\n\nThank you"
                                                                            }
                                                                        },
                                                                        "type": "Foreach"
                                                                    }
                                                                },
                                                                "else": {
                                                                    "actions": {}
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "greater": [
                                                                                "@variables('daysTilExpiration')",
                                                                                0
                                                                            ]
                                                                        },
                                                                        {
                                                                            "less": [
                                                                                "@variables('daysTilExpiration')",
                                                                                30
                                                                            ]
                                                                        },
                                                                        {
                                                                            "equals": [
                                                                                "@variables('CSA-Owner Check')",
                                                                                "@true"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "less": [
                                                                    "@variables('daysTilExpiration')",
                                                                    0
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "DifferentAsDays": {
                                                    "runAfter": {
                                                        "StartTimeTickValue": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@div(div(div(mul(sub(outputs('EndTimeTickValue'),outputs('StartTimeTickValue')),100),1000000000) , 3600), 24)"
                                                },
                                                "EndTimeTickValue": {
                                                    "type": "Compose",
                                                    "inputs": "@ticks(item()?['endDateTime'])"
                                                },
                                                "Set_variable_-_daysTilsExpiration": {
                                                    "runAfter": {
                                                        "DifferentAsDays": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "daysTilExpiration",
                                                        "value": "@outputs('DifferentAsDays')"
                                                    }
                                                },
                                                "StartTimeTickValue": {
                                                    "runAfter": {
                                                        "EndTimeTickValue": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@ticks(utcnow())"
                                                }
                                            },
                                            "runAfter": {
                                                "Condition_-_If_CSA_is_null": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "For_each_KeyCred": {
                                            "foreach": "@items('Foreach_-_apps')?['keyCredentials']",
                                            "actions": {
                                                "Condition_-_If_already_expired_-_keyCred": {
                                                    "actions": {
                                                        "Condition_-_If_certificate_owner": {
                                                            "actions": {
                                                                "Append_Certificate_to_HTML_with_owner": {
                                                                    "type": "AppendToStringVariable",
                                                                    "inputs": {
                                                                        "name": "html",
                                                                        "value": "<tr><td @{variables('styles').cellStyle}><a href=\"https://ms.portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{variables('appId')}/isMSAApp/\">@{variables('appId')}</a></td><td @{variables('styles').cellStyle}>@{variables('displayName')}</td><td @{variables('styles').cellStyle}>@{items('For_each_KeyCred')?['keyId']}</td><td @{if(less(variables('daystilexpiration'), 15), variables('styles').redStyle, if(less(variables('daystilexpiration'), 30), variables('styles').yellowStyle, variables('styles').cellStyle))}>@{variables('daystilexpiration')} </td><td @{variables('styles').cellStyle}>Certificate</td><td @{variables('styles').cellStyle}>@{formatDateTime(item()?['endDateTime'], 'g')}</td><td @{variables('styles').cellStyle}>@{join(body('Parse_-_CSA-Owner')?['customSecurityAttributes']?['OwnerManagement']?['AppOwner'],',')}</td></tr>"
                                                                    }
                                                                },
                                                                "Condition_4": {
                                                                    "actions": {
                                                                        "For_each_Owner_-_Certificate": {
                                                                            "foreach": "@body('Parse_-_CSA-Owner')?['customSecurityAttributes']?['OwnerManagement']?['AppOwner']",
                                                                            "actions": {
                                                                                "IGA-Notifications_-_Certificate": {
                                                                                    "runAfter": {
                                                                                        "Prepare_HTML_for_owner_-_Certificate": [
                                                                                            "Succeeded"
                                                                                        ]
                                                                                    },
                                                                                    "type": "Workflow",
                                                                                    "inputs": {
                                                                                        "host": {
                                                                                            "workflow": {
                                                                                                "id": "[parameters('LogicAppNotifications')]"
                                                                                            },
                                                                                            "triggerName": "When_a_HTTP_request_is_received"
                                                                                        },
                                                                                        "body": {
                                                                                            "MailFrom": "[parameters('MailFrom')]",
                                                                                            "SendTo": "@{items('For_each_Owner_-_Certificate')}",
                                                                                            "Subject": "Your certificate is expired",
                                                                                            "Body": "@outputs('Prepare_HTML_for_owner_-_Certificate')"
                                                                                        }
                                                                                    },
                                                                                    "operationOptions": "DisableAsyncPattern"
                                                                                },
                                                                                "Prepare_HTML_for_owner_-_Certificate": {
                                                                                    "type": "Compose",
                                                                                    "inputs": "Hello,<br/>\nWe want to update you that, you are owner of the application <strong>@{items('Foreach_-_apps')?['displayName']}</strong><br/>\n\nOne of the secrets of this applicatin is going to expire in @{variables('daysTilExpiration')} days.<br/>\n\nPlease take an action to avoid any authentication issues related to this secret.\n<br/><br/>\nHere are the details of the Certificate :<br/>\n<strong>Certificate Id :</strong> @{items('For_each_KeyCred')?['keyId']}<br/>\n<strong>Expiration time :</strong> @{formatDateTime(items('For_each_KeyCred')?['endDateTime'], 'g')}<br/>\n<strong>App Id :</strong> <a href=\"https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{items('Foreach_-_apps')?['appId']}/isMSAApp/>@{items('Foreach_-_apps')?['appId']}</a><br/><br/>\n\n\nThank you"
                                                                                }
                                                                            },
                                                                            "type": "Foreach"
                                                                        }
                                                                    },
                                                                    "runAfter": {
                                                                        "Append_Certificate_to_HTML_with_owner": [
                                                                            "Succeeded"
                                                                        ]
                                                                    },
                                                                    "else": {
                                                                        "actions": {}
                                                                    },
                                                                    "expression": {
                                                                        "and": [
                                                                            {
                                                                                "less": [
                                                                                    "@variables('daysTilExpiration')",
                                                                                    "@float('15')"
                                                                                ]
                                                                            }
                                                                        ]
                                                                    },
                                                                    "type": "If"
                                                                }
                                                            },
                                                            "else": {
                                                                "actions": {
                                                                    "Append_Certificate_to_HTML_without_owner": {
                                                                        "type": "AppendToStringVariable",
                                                                        "inputs": {
                                                                            "name": "html",
                                                                            "value": "<tr><td @{variables('styles').cellStyle}><a href=\"https://ms.portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{variables('appId')}/isMSAApp/\">@{variables('appId')}</a></td><td @{variables('styles').cellStyle}>@{variables('displayName')}</td><td @{variables('styles').cellStyle}>@{items('For_each_KeyCred')?['keyId']}</td><td @{if(less(variables('daystilexpiration'), 15), variables('styles').redStyle, if(less(variables('daystilexpiration'), 30), variables('styles').yellowStyle, variables('styles').cellStyle))}>@{variables('daystilexpiration')} </td><td @{variables('styles').cellStyle}>Certificate</td><td @{variables('styles').cellStyle}>@{formatDateTime(item()?['endDateTime'], 'g')}</td><td @{variables('styles').cellStyle}></td></tr>"
                                                                        }
                                                                    }
                                                                }
                                                            },
                                                            "expression": {
                                                                "and": [
                                                                    {
                                                                        "equals": [
                                                                            "@variables('CSA-Owner Check')",
                                                                            "@true"
                                                                        ]
                                                                    }
                                                                ]
                                                            },
                                                            "type": "If"
                                                        }
                                                    },
                                                    "runAfter": {
                                                        "Store_Days_till_expiration": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "else": {
                                                        "actions": {
                                                            "Condition_-_If_less_than_30_days_-_keyCred": {
                                                                "actions": {
                                                                    "For_each_Owner_-_Certificate_-_30d": {
                                                                        "foreach": "@body('Parse_-_CSA-Owner')?['customSecurityAttributes']?['OwnerManagement']?['AppOwner']",
                                                                        "actions": {
                                                                            "IGA-Notifications_-_Certificate_-_30d": {
                                                                                "runAfter": {
                                                                                    "Prepare_HTML_for_owner_-_Certificate_-_30d": [
                                                                                        "Succeeded"
                                                                                    ]
                                                                                },
                                                                                "type": "Workflow",
                                                                                "inputs": {
                                                                                    "host": {
                                                                                        "workflow": {
                                                                                            "id": "[parameters('LogicAppNotifications')]"
                                                                                        },
                                                                                        "triggerName": "When_a_HTTP_request_is_received"
                                                                                    },
                                                                                    "body": {
                                                                                        "MailFrom": "[parameters('MailFrom')]",
                                                                                        "SendTo": "@items('For_each_Owner_-_Certificate_-_30d')",
                                                                                        "Subject": "Your certificate is expired",
                                                                                        "Body": "@outputs('Prepare_HTML_for_owner_-_Certificate_-_30d')"
                                                                                    }
                                                                                },
                                                                                "operationOptions": "DisableAsyncPattern"
                                                                            },
                                                                            "Prepare_HTML_for_owner_-_Certificate_-_30d": {
                                                                                "type": "Compose",
                                                                                "inputs": "Hello,<br/>\nWe want to update you that, you are owner of the application <strong>@{items('Foreach_-_apps')?['displayName']}</strong><br/>\n\nOne of the secrets of this applicatin is going to expire in @{variables('daysTilExpiration')} days.<br/>\n\nPlease take an action to avoid any authentication issues related to this secret.\n<br/><br/>\nHere are the details of the Certificate :<br/>\n<strong>Certificate Id :</strong> @{items('For_each_KeyCred')?['keyId']}<br/>\n<strong>Expiration time :</strong> @{formatDateTime(items('For_each_KeyCred')?['endDateTime'], 'g')}<br/>\n<strong>App Id :</strong> <a href=\"https://portal.azure.com/#blade/Microsoft_AAD_RegisteredApps/ApplicationMenuBlade/Credentials/appId/@{items('Foreach_-_apps')?['appId']}/isMSAApp/>@{items('Foreach_-_apps')?['appId']}</a><br/><br/>\n\n\nThank you"
                                                                            }
                                                                        },
                                                                        "type": "Foreach"
                                                                    }
                                                                },
                                                                "else": {
                                                                    "actions": {}
                                                                },
                                                                "expression": {
                                                                    "and": [
                                                                        {
                                                                            "greater": [
                                                                                "@variables('daysTilExpiration')",
                                                                                0
                                                                            ]
                                                                        },
                                                                        {
                                                                            "less": [
                                                                                "@variables('daysTilExpiration')",
                                                                                30
                                                                            ]
                                                                        },
                                                                        {
                                                                            "equals": [
                                                                                "@variables('CSA-Owner Check')",
                                                                                "@true"
                                                                            ]
                                                                        }
                                                                    ]
                                                                },
                                                                "type": "If"
                                                            }
                                                        }
                                                    },
                                                    "expression": {
                                                        "and": [
                                                            {
                                                                "less": [
                                                                    "@variables('daysTilExpiration')",
                                                                    0
                                                                ]
                                                            }
                                                        ]
                                                    },
                                                    "type": "If"
                                                },
                                                "DifferentAsDays2": {
                                                    "runAfter": {
                                                        "StartTimeTickValue2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@div(div(div(mul(sub(outputs('EndTimeTickValue2'),outputs('StartTimeTickValue2')),100),1000000000) , 3600), 24)"
                                                },
                                                "EndTimeTickValue2": {
                                                    "type": "Compose",
                                                    "inputs": "@ticks(item()?['endDateTime'])"
                                                },
                                                "StartTimeTickValue2": {
                                                    "runAfter": {
                                                        "EndTimeTickValue2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "Compose",
                                                    "inputs": "@ticks(utcnow())"
                                                },
                                                "Store_Days_till_expiration": {
                                                    "runAfter": {
                                                        "DifferentAsDays2": [
                                                            "Succeeded"
                                                        ]
                                                    },
                                                    "type": "SetVariable",
                                                    "inputs": {
                                                        "name": "daysTilExpiration",
                                                        "value": "@outputs('DifferentAsDays2')"
                                                    }
                                                }
                                            },
                                            "runAfter": {
                                                "For_each_-_PasswordCred": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Foreach"
                                        },
                                        "HTTP_-_Get_CSA-Owner": {
                                            "runAfter": {
                                                "Set_variable_-_keyCredential": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "Http",
                                            "inputs": {
                                                "uri": "https://graph.microsoft.com/v1.0/servicePrincipals(appId='@{variables('AppID')}')?$select=customSecurityAttributes",
                                                "method": "GET",
                                                "authentication": {
                                                    "audience": "https://graph.microsoft.com",
                                                    "type": "ManagedServiceIdentity"
                                                }
                                            },
                                            "runtimeConfiguration": {
                                                "contentTransfer": {
                                                    "transferMode": "Chunked"
                                                }
                                            }
                                        },
                                        "Parse_light_-_Owner": {
                                            "runAfter": {
                                                "HTTP_-_Get_CSA-Owner": [
                                                    "Succeeded",
                                                    "Failed"
                                                ]
                                            },
                                            "type": "ParseJson",
                                            "inputs": {
                                                "content": "@body('HTTP_-_Get_CSA-Owner')",
                                                "schema": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "type": "string"
                                                        },
                                                        "customSecurityAttributes": {}
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "Set_variable_-_appId": {
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "AppID",
                                                "value": "@items('Foreach_-_apps')?['appId']"
                                            }
                                        },
                                        "Set_variable_-_displayName": {
                                            "runAfter": {
                                                "Set_variable_-_appId": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "displayName",
                                                "value": "@items('Foreach_-_apps')?['displayName']"
                                            }
                                        },
                                        "Set_variable_-_keyCredential": {
                                            "runAfter": {
                                                "Set_variable_-_passwordCredential": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "keyCredential",
                                                "value": "@items('Foreach_-_apps')?['keyCredentials']"
                                            }
                                        },
                                        "Set_variable_-_passwordCredential": {
                                            "runAfter": {
                                                "Set_variable_-_displayName": [
                                                    "Succeeded"
                                                ]
                                            },
                                            "type": "SetVariable",
                                            "inputs": {
                                                "name": "passwordCredential",
                                                "value": "@items('Foreach_-_apps')?['passwordCredentials']"
                                            }
                                        }
                                    },
                                    "runAfter": {
                                        "Parse_JSON_-_Get_Apps": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "Foreach",
                                    "runtimeConfiguration": {
                                        "concurrency": {
                                            "repetitions": 1
                                        }
                                    }
                                },
                                "HTTP_-_Get_AzureAD_Applications": {
                                    "type": "Http",
                                    "inputs": {
                                        "uri": "@variables('NextLink')",
                                        "method": "GET",
                                        "authentication": {
                                            "audience": "https://graph.microsoft.com",
                                            "type": "ManagedServiceIdentity"
                                        }
                                    }
                                },
                                "Parse_JSON_-_Get_Apps": {
                                    "runAfter": {
                                        "HTTP_-_Get_AzureAD_Applications": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "ParseJson",
                                    "inputs": {
                                        "content": "@body('HTTP_-_Get_AzureAD_Applications')",
                                        "schema": {
                                            "properties": {
                                                "properties": {
                                                    "properties": {
                                                        "@@odata.context": {
                                                            "properties": {
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        },
                                                        "value": {
                                                            "properties": {
                                                                "items": {
                                                                    "properties": {
                                                                        "properties": {
                                                                            "properties": {
                                                                                "@@odata.id": {
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "appId": {
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "displayName": {
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "keyCredentials": {
                                                                                    "properties": {
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                },
                                                                                "passwordCredentials": {
                                                                                    "properties": {
                                                                                        "items": {
                                                                                            "properties": {
                                                                                                "properties": {
                                                                                                    "properties": {
                                                                                                        "customKeyIdentifier": {
                                                                                                            "properties": {},
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "displayName": {
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "endDateTime": {
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "hint": {
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "keyId": {
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "secretText": {
                                                                                                            "properties": {},
                                                                                                            "type": "object"
                                                                                                        },
                                                                                                        "startDateTime": {
                                                                                                            "properties": {
                                                                                                                "type": {
                                                                                                                    "type": "string"
                                                                                                                }
                                                                                                            },
                                                                                                            "type": "object"
                                                                                                        }
                                                                                                    },
                                                                                                    "type": "object"
                                                                                                },
                                                                                                "required": {
                                                                                                    "items": {
                                                                                                        "type": "string"
                                                                                                    },
                                                                                                    "type": "array"
                                                                                                },
                                                                                                "type": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "type": "object"
                                                                                        },
                                                                                        "type": {
                                                                                            "type": "string"
                                                                                        }
                                                                                    },
                                                                                    "type": "object"
                                                                                }
                                                                            },
                                                                            "type": "object"
                                                                        },
                                                                        "required": {
                                                                            "items": {
                                                                                "type": "string"
                                                                            },
                                                                            "type": "array"
                                                                        },
                                                                        "type": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "type": "object"
                                                                },
                                                                "type": {
                                                                    "type": "string"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "type": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "Update_Next_Link": {
                                    "runAfter": {
                                        "Foreach_-_apps": [
                                            "Succeeded"
                                        ]
                                    },
                                    "type": "SetVariable",
                                    "inputs": {
                                        "name": "NextLink",
                                        "value": "@body('Parse_JSON_-_Get_Apps')?['@odata.nextLink']"
                                    }
                                }
                            },
                            "runAfter": {
                                "Initialize_-_NextLink": [
                                    "Succeeded"
                                ]
                            },
                            "expression": "@not(equals(variables('NextLink'), null))",
                            "limit": {
                                "count": 60,
                                "timeout": "PT1H"
                            },
                            "type": "Until"
                        },
                        "Initialize_CSA-Owner-Check": {
                            "runAfter": {
                                "Initialize_CSA-Owner": [
                                    "Succeeded"
                                ]
                            },
                            "type": "InitializeVariable",
                            "inputs": {
                                "variables": [
                                    {
                                        "name": "CSA-Owner Check",
                                        "type": "boolean"
                                    }
                                ]
                            }
                        }
                    },
                    "outputs": {}
                },
                "parameters": {
                    "$connections": {
                        "value": {}
                    }
                }
            }
        }
    ]
}